--- ../source/ext/fluentd/lib/fluent/plugin/in_exec.rb	2019-07-16 19:29:38.330949523 -0700
+++ ../source/ext/fluentd/lib/fluent/plugin/in_exec.rb.new	2019-07-16 16:47:33.930518417 -0700
@@ -109,15 +109,15 @@
     def shutdown
       if @run_interval
         @finished = true
-        # call Thread#run which interupts sleep in order to stop run_periodic thread immediately.
-        @thread.run
-        @thread.join
-      else
+        @pid = @run_periodic_pid
+      end
+
+      if @pid
         begin
           Process.kill(:TERM, @pid)
         rescue #Errno::ECHILD, Errno::ESRCH, Errno::EPERM
         end
-        if @thread.join(60)  # TODO wait time
+        if @thread.join(1)
           return
         end
 
@@ -125,12 +125,20 @@
           Process.kill(:KILL, @pid)
         rescue #Errno::ECHILD, Errno::ESRCH, Errno::EPERM
         end
-        @thread.join
+
+        begin
+          # Need to reap the process because it will become a zombie process
+          Process.detach(@pid)
+        rescue #Errno::ECHILD, Errno::ESRCH, Errno::EPERM
+        end
+        # cleanup the thread
+        Thread.kill(@thread)
       end
     end
 
     def run
       @parser.call(@io)
+      Process.waitpid(@io.pid)
     end
 
     def run_periodic
@@ -138,8 +146,10 @@
       until @finished
         begin
           io = IO.popen(@command, "r")
+          @run_periodic_pid = io.pid
           @parser.call(io)
-          Process.waitpid(io.pid)
+          Process.waitpid(@run_periodic_pid)
+          @run_periodic_pid = nil
         rescue
           log.error "exec failed to run or shutdown child process", error: $!.to_s, error_class: $!.class.to_s
           log.warn_backtrace $!.backtrace
